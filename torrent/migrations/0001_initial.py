# Generated by Django 3.0.6 on 2020-06-03 23:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('deletion', models.DateTimeField(blank=True, null=True, verbose_name='Delete?')),
                ('categoryParentId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='torrent.Category', verbose_name='Parent category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='TorrentStatSL',
            fields=[
                ('hash', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='Hash')),
                ('seederNr', models.IntegerField(default=0, verbose_name='Number of seeders')),
                ('leecherNr', models.IntegerField(default=0, verbose_name='Number of leechers')),
            ],
        ),
        migrations.CreateModel(
            name='Torrent',
            fields=[
                ('hash', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Hash SHA1 of torrent')),
                ('torrentFileName', models.CharField(default='NONAME', max_length=128, verbose_name='Torrent file name')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('description', models.CharField(max_length=8192, null=True, verbose_name='Description')),
                ('size', models.DecimalField(decimal_places=3, default=0, max_digits=13, verbose_name='Size')),
                ('sizeUnit', models.CharField(choices=[('b', 'b'), ('Kb', 'Kb'), ('Mb', 'Mb'), ('Gb', 'Gb')], default='b', max_length=2, verbose_name='Size unit')),
                ('nbPiece', models.IntegerField(default=1, verbose_name='Number of piece')),
                ('sizePiece', models.IntegerField(default=0, verbose_name='Size for each piece in byte')),
                ('sizePieceUnit', models.CharField(choices=[('b', 'b'), ('Kb', 'Kb'), ('Mb', 'Mb'), ('Gb', 'Gb')], default='b', max_length=2, verbose_name='Size piece unit')),
                ('dlNumber', models.IntegerField(default=0, verbose_name='Number of download')),
                ('dlCompleted', models.IntegerField(default=0, verbose_name='Number of completed')),
                ('seed', models.IntegerField(default=0, verbose_name='Number of seed')),
                ('leech', models.IntegerField(default=0, verbose_name='Number of leech')),
                ('creation', models.DateTimeField(auto_now_add=True)),
                ('deletion', models.DateTimeField(blank=True, null=True, verbose_name='Delete?')),
                ('is_bitiso', models.BooleanField(default=True, verbose_name='Created by bitiso ?')),
                ('categoryId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='torrent.Category', verbose_name='Category')),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Uploader')),
            ],
            options={
                'verbose_name': 'Torrent',
                'verbose_name_plural': 'Torrents',
            },
        ),
        migrations.AddIndex(
            model_name='torrent',
            index=models.Index(fields=['categoryId'], name='ix_torrent_categoryId'),
        ),
        migrations.AddIndex(
            model_name='torrent',
            index=models.Index(fields=['uploader'], name='ix_torrent_uploader'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['categoryParentId'], name='ix_category_categoryParentId'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('categoryParentId', 'name')},
        ),
    ]
